{
    "_comment": "DO NOT EDIT: FILE GENERATED AUTOMATICALLY BY PTERODACTYL PANEL - PTERODACTYL.IO",
    "meta": {
        "version": "PTDL_v2",
        "update_url": null
    },
    "exported_at": "2024-06-21T02:12:25+00:00",
    "name": "SPT w\/ Fika 3.9.3",
    "author": "drethek.dev@gmail.com",
    "description": null,
    "features": null,
    "docker_images": {
        "ghcr.io\/parkervcp\/yolks:debian": "ghcr.io\/parkervcp\/yolks:debian"
    },
    "file_denylist": [],
    "startup": ".\/SPT.Server.exe",
    "config": {
        "files": "{\r\n    \"SPT_Data\/Server\/configs\/http.json\": {\r\n        \"parser\": \"json\",\r\n        \"find\": {\r\n            \"ip\": \"0.0.0.0\",\r\n            \"backendIp\": \"{{server.build.default.ip}}\",\r\n            \"backendPort\": \"{{server.build.default.port}}\",\r\n            \"port\": \"{{server.build.default.port}}\"\r\n        }\r\n    }\r\n}",
        "startup": "{\r\n    \"done\": \"Server is running, do not close while playing SPT, Happy playing!!\"\r\n}",
        "logs": "{}",
        "stop": "^C"
    },
    "scripts": {
        "installation": {
            "script": "#!\/bin\/bash\r\necho\r\n\r\n# Logging function with date and time\r\nlog() {\r\n  echo \"[INFO] $1\"\r\n}\r\n\r\n# Git Config\r\nlog \"Configuring Git\"\r\ngit config --global advice.detachedHead false > \/dev\/null 2>&1\r\n\r\n# Cleanup\r\nlog \"Cleaning up directories\"\r\nif [[ -d ${HOME}\/dev ]]; then\r\n  rm -rf ${HOME}\/dev > \/dev\/null 2>&1\r\nfi\r\n\r\nif [[ -d \/mnt\/server ]]; then\r\n  rm -rf \/mnt\/server\/* > \/dev\/null 2>&1\r\nfi\r\n\r\n# Update and install git, git-lfs, curl\r\nlog \"Updating packages and installing git, git-lfs, curl\"\r\napt update > \/dev\/null 2>&1\r\napt install -yq git git-lfs curl > \/dev\/null 2>&1\r\n\r\n# Install Node Version Manager (NVM) and NodeJS\r\nlog \"Installing NVM and NodeJS\"\r\ngit clone https:\/\/github.com\/nvm-sh\/nvm.git ${HOME}\/.nvm > \/dev\/null 2>&1\r\nchmod o+rwx -R ${HOME}\/.nvm > \/dev\/null 2>&1\r\nsource ${HOME}\/.nvm\/nvm.sh\r\nnvm install ${NODE_VERSION} > \/dev\/null 2>&1\r\n\r\n# Clone the SPT AKI repository\r\nlog \"Cloning the SPT AKI repository\"\r\ngit clone --branch ${SPT_BRANCH} https:\/\/dev.sp-tarkov.com\/SPT\/Server.git ${HOME}\/dev\/server > \/dev\/null 2>&1\r\n\r\n# Navigating to the project\r\nlog \"Navigating to the project directory and preparing the repository\"\r\ncd ${HOME}\/dev\/server\/project\r\n\r\n# Fetching LFS files\r\nlog \"Checking out the specified commit and fetching all LFS files\"\r\ngit checkout ${SPT_COMMIT} > \/dev\/null 2>&1\r\ngit-lfs fetch --all > \/dev\/null 2>&1\r\ngit-lfs pull > \/dev\/null 2>&1\r\n\r\n# Install npm dependencies and run the build\r\nlog \"Installing npm dependencies and running the build\"\r\nnpm install > \/dev\/null 2>&1\r\nnpm run build:release -- --arch=$([ \"$(uname -m)\" = \"aarch64\" ] && echo arm64 || echo x64) --platform=linux > \/dev\/null 2>&1\r\n\r\n# Move the built server and clean up the source\r\nlog \"Installing SPT server\"\r\nmv ${HOME}\/dev\/server\/project\/build\/* \/mnt\/server\/ > \/dev\/null 2>&1\r\n\r\n# Check if FIKA should be installed\r\nif [ \"${SPT_FIKA}\" = 1 ]; then\r\n  # Cloning the Fika mod  \r\n  log \"Cloning FIKA mod repository\"\r\n  git clone --branch ${FIKA_BRANCH} https:\/\/github.com\/project-fika\/Fika-Server.git ${HOME}\/dev\/fika-server > \/dev\/null 2>&1\r\n\r\n  # Fetching LFS files\r\n  log \"Checking out the specified commit for the Fika mod\"\r\n  cd ${HOME}\/dev\/fika-server > \/dev\/null 2>&1\r\n  git checkout ${FIKA_COMMIT} > \/dev\/null 2>&1\r\n  git-lfs fetch --all > \/dev\/null 2>&1\r\n  git-lfs pull > \/dev\/null 2>&1\r\n\r\n  # Install npm dependencies and run the build\r\n  log \"Building Fika mod\"\r\n  source ${HOME}\/.nvm\/nvm.sh > \/dev\/null 2>&1\r\n  npm install > \/dev\/null 2>&1\r\n  npm run build > \/dev\/null 2>&1\r\n  \r\n  # Creating Mod folder\r\n  log \"Creating necessary directories\"\r\n  mkdir -p \/mnt\/server\/user\/mods > \/dev\/null 2>&1\r\n\r\n  # Installing Fika\r\n  log \"Installing FIKA mod\"\r\n  unzip ${HOME}\/dev\/fika-server\/dist\/fika-server.zip -d \/mnt\/server\/ > \/dev\/null 2>&1\r\nfi\r\n\r\nlog \"Server installation and configuration completed successfully\"\r\nrm -rf ${HOME}\/dev > \/dev\/null 2>&1",
            "container": "ghcr.io\/parkervcp\/installers:debian",
            "entrypoint": "bash"
        }
    },
    "variables": [
        {
            "name": "SPT Version",
            "description": "Branch to compile source from",
            "env_variable": "SPT_BRANCH",
            "default_value": "3.9.3",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Node Version",
            "description": "",
            "env_variable": "NODE_VERSION",
            "default_value": "20.11.1",
            "user_viewable": false,
            "user_editable": false,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "SPT Commit",
            "description": "Commit to compile source from",
            "env_variable": "SPT_COMMIT",
            "default_value": "HEAD",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Include Fika",
            "description": "",
            "env_variable": "SPT_FIKA",
            "default_value": "0",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|boolean",
            "field_type": "text"
        },
        {
            "name": "Fika Branch",
            "description": "Branch to compile source from, use main for the latest version",
            "env_variable": "FIKA_BRANCH",
            "default_value": "main",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        },
        {
            "name": "Fika Commit",
            "description": "",
            "env_variable": "FIKA_COMMIT",
            "default_value": "HEAD",
            "user_viewable": true,
            "user_editable": true,
            "rules": "required|string",
            "field_type": "text"
        }
    ]
}
